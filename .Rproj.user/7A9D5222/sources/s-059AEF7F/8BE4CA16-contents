\name{aroundWord}
\alias{aroundWord}
%- Also NEED an '\alias' for EACH other topic documented here.
\title{
%%  ~~function to do ... ~~
}
\description{
%%  ~~ Returns a data frame of word frequency table. ~~
}
\usage{
aroundWord(x)
}
%- maybe also 'usage' for other objects documented here.
\arguments{
  \item{x}{
%%     ~~Describe \code{x} here~~
}
}
\details{
%%  ~~ If necessary, more details than the description above ~~
}
\value{
%%  ~Describe the value returned
%%  If it is a LIST, use
%%  \item{comp1 }{Description of 'comp1'}
%%  \item{comp2 }{Description of 'comp2'}
%% ...
}
\references{
%% ~put references to the literature/web site here ~
}
\author{
%%  ~~who you are~~
}
\note{
%%  ~~further notes~~
}

%% ~Make other sections like Warning with \section{Warning }{....} ~

\seealso{
%% ~~objects to See Also as \code{\link{help}}, ~~~
}
\examples{
##---- Should be DIRECTLY executable !! ----
##-- ==>  Define data, use random,
##--	or do  help(data=index)  for the standard data sets.

aroundWord(pattern = "Twitter", text = "Among many methods to study a policy debate, we chose Twitter data. Twitter data can generate different types of networks that are useful for different purposes. For example, Twitter hashtag networks illustrate the topic universe.", max.distance = 3, min.freq = 1)

## The function is currently defined as
aroundWord <- function(pattern, text, max.distance, min.freq) {
  splittext <- unlist(strsplit(tolower(removePunctuation(text))," "))
  loc_pat <- which(grepl(pattern, splittext, ignore.case = T)==T)
   if((length(loc_pat)==0)==TRUE) {warning("The pattern was not found in the text string. Returns NA")
   alternativeoutput <- "NA"
   return(alternativeoutput)}
 else {
  look_around <- list()
for(i in 1: length(loc_pat)){look_around[[i]] <- splittext[ifelse((loc_pat[i] - max.distance)>0,(loc_pat[i] - max.distance),1):ifelse((loc_pat[i] + max.distance)>length(splittext),length(splittext),(loc_pat[i] + max.distance))]}
lookaround <- unlist(look_around)
lookaround <- lookaround[!lookaround%in%mystopwords]
lookaround <- lookaround[!lookaround%in%pattern]
lookaround <- as.factor(lookaround)
lookaround_table <-  data.frame(table(lookaround))
lookaround_table <- lookaround_table[rev(order(lookaround_table$Freq)),]
lookaround_table <- lookaround_table[lookaround_table$Freq >= min.freq,]
colnames(lookaround_table)[1] <- "Word"
lookaround_table <- lookaround_table[lookaround_table$Word!= pattern, ]
return(lookaround_table)}
}
% Add one or more standard keywords, see file 'KEYWORDS' in the
% R documentation directory (show via RShowDoc("KEYWORDS")):
% \keyword{ ~kwd1 }
% \keyword{ ~kwd2 }
% Use only one keyword per line.
% For non-standard keywords, use \concept instead of \keyword:
% \concept{ ~cpt1 }
% \concept{ ~cpt2 }
% Use only one concept per line.
