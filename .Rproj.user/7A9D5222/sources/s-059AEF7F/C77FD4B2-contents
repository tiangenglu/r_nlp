\name{withinDistance_all}
\alias{withinDistance_all}
%- Also NEED an '\alias' for EACH other topic documented here.
\title{
%%  ~~function to do ... ~~
}
\description{
%%  ~~ A concise (1-5 lines) description of what the function does. ~~
}
\usage{
withinDistance_all(x)
}
%- maybe also 'usage' for other objects documented here.
\arguments{
  \item{x}{
%%     ~~Describe \code{x} here~~
}
}
\details{
%%  ~~ If necessary, more details than the description above ~~
}
\value{
%%  ~Describe the value returned
%%  If it is a LIST, use
%%  \item{comp1 }{Description of 'comp1'}
%%  \item{comp2 }{Description of 'comp2'}
%% ...
}
\references{
%% ~put references to the literature/web site here ~
}
\author{
%%  ~~who you are~~
}
\note{
%%  ~~further notes~~
}

%% ~Make other sections like Warning with \section{Warning }{....} ~

\seealso{
%% ~~objects to See Also as \code{\link{help}}, ~~~
}
\examples{
##---- Should be DIRECTLY executable !! ----
##-- ==>  Define data, use random,
##--	or do  help(data=index)  for the standard data sets.

withinDistance_all(pattern1 = "Twitter", pattern2 = "network", text = "Among many methods to study a policy debate, we chose Twitter data. Twitter data can generate different types of networks that are useful for different purposes. For example, Twitter hashtag networks illustrate the topic universe.", threshold = 3)


## The function is currently defined as
withinDistance_all <- function(pattern1, pattern2, text, threshold) {
  loc_pat1 <- which(grepl(pattern1,unlist(strsplit(text," ")), ignore.case = T)==T)
loc_pat2 <- which(grepl(pattern2,unlist(strsplit(text," ")), ignore.case = T)==T)
 if((length(loc_pat1)==0)==TRUE | (length(loc_pat2)==0)==TRUE) {warning("At least one of the patterns were not found in the string. Returns NA.")
   alternativeoutput <- "NA"
   return(alternativeoutput)}
 else {
distances1to2 <- list()
{for (i in 1: length(loc_pat1)){distances1to2[[i]] <- ((abs(loc_pat1[i] - loc_pat2)))}}

distance1to2_m <- matrix(unlist(distances1to2), nrow = length(distances1to2), ncol = length(loc_pat2), byrow = T) # convert distance1to2 to matrix
rownames(distance1to2_m) <- paste(pattern1, seq(1:length(loc_pat1)), sep = "_")
colnames(distance1to2_m) <- paste(pattern2, seq(1:length(loc_pat2)), sep = "_")
distance <- rep(NA, nrow(distance1to2_m))
for (j in 1:nrow(distance1to2_m)) {distance[j] <- min(distance1to2_m[j,])}
return(distance <= threshold)}
}
% Add one or more standard keywords, see file 'KEYWORDS' in the
% R documentation directory (show via RShowDoc("KEYWORDS")):
% \keyword{ ~kwd1 }
% \keyword{ ~kwd2 }
% Use only one keyword per line.
% For non-standard keywords, use \concept instead of \keyword:
% \concept{ ~cpt1 }
% \concept{ ~cpt2 }
% Use only one concept per line.
